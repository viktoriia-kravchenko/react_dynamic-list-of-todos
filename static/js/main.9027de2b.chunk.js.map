{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","onSelect","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","query","setQuery","chosenStatus","setChosenStatus","value","onChange","event","target","placeholder","style","pointerEvents","get","url","fetch","then","res","json","Loader","TodoModal","selectedTodo","onClose","useState","user","setUser","isUserLoading","setIsUserLoading","isUserLoadingError","setIsUserLoadingError","useEffect","userId","loadedUser","catch","finally","href","email","name","App","setTodos","isTodosLoading","setIsTodosLoading","isTodosLoadingError","setIsTodosLoadingError","setSelectedTodoId","loadedTodos","filteredTodos","useMemo","filter","preparedQuery","toLowerCase","trim","isQueryInTitle","includes","isNoMatchingTodos","length","find","closeModal","useCallback","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9027de2b.chunk.js","sourcesContent":["import { FC } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId: number,\n  onSelect: (selectedTodoId: number) => void,\n};\n\nexport const TodoList: FC<Props> = (\n  { todos, selectedTodoId, onSelect },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr key={todo.id} data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={cn(\n              {\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelect(todo.id)}\n            >\n              <span className=\"icon\">\n                <i className={cn(\n                  'far',\n                  {\n                    'far fa-eye': todo.id !== selectedTodoId,\n                    'fa-eye-slash': todo.id === selectedTodoId,\n                  },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { FC } from 'react';\n\ntype Props = {\n  query: string,\n  setQuery: (query: string) => void,\n  chosenStatus: string,\n  setChosenStatus: (chosenStatus: string) => void,\n};\n\nexport const TodoFilter: FC<Props> = ({\n  query, setQuery, chosenStatus, setChosenStatus,\n}) => {\n  const clearFilter = () => {\n    setQuery('');\n    setChosenStatus('all');\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={chosenStatus}\n            onChange={(event) => setChosenStatus(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearFilter}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// function wait(delay: number): Promise<void> {\n//   return new Promise(resolve => {\n//     setTimeout(resolve, delay);\n//   });\n// }\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return fetch(fullURL)\n    .then(res => res.json());\n  // return wait(300)\n  //   .then(() => fetch(fullURL))\n  //   .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { FC } from 'react';\nimport './Loader.scss';\n\nexport const Loader: FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC, useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  onClose: () => void,\n\n};\n\nexport const TodoModal: FC<Props> = ({ selectedTodo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isUserLoading, setIsUserLoading] = useState(false);\n  const [isUserLoadingError, setIsUserLoadingError] = useState(false);\n\n  useEffect(() => {\n    setIsUserLoading(true);\n\n    getUser(selectedTodo.id)\n      .then((loadedUser) => setUser(loadedUser))\n      .catch(() => setIsUserLoadingError(true))\n      .finally(() => setIsUserLoading(false));\n  }, [selectedTodo.id]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <div\n            className=\"modal-card-title has-text-weight-medium\"\n            data-cy=\"modal-header\"\n          >\n            {`Todo #${selectedTodo.id}`}\n          </div>\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            type=\"button\"\n            className=\"delete\"\n            data-cy=\"modal-close\"\n            onClick={onClose}\n          />\n        </header>\n\n        <div className=\"modal-card-body\">\n          <p className=\"block\" data-cy=\"modal-title\">\n            {selectedTodo.title}\n          </p>\n\n          {isUserLoading\n            ? <Loader />\n            : (\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* <strong className=\"has-text-success\">Done</strong> */}\n                {selectedTodo.completed\n                  ? <strong className=\"has-text-danger\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                <span> by </span>\n\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              </p>\n            )}\n\n          {isUserLoadingError && (\n            <p>Error occured while loading user</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport {\n  FC, useEffect, useState, useMemo, useCallback,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport './App.scss';\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [chosenStatus, setChosenStatus] = useState('all');\n  const [isTodosLoading, setIsTodosLoading] = useState(false);\n  const [isTodosLoadingError, setIsTodosLoadingError] = useState(false);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n\n  useEffect(() => {\n    setIsTodosLoading(true);\n\n    getTodos()\n      .then((loadedTodos) => setTodos(loadedTodos))\n      .catch(() => setIsTodosLoadingError(true))\n      .finally(() => setIsTodosLoading(false));\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return todos.filter(todo => {\n      const preparedQuery = query.toLowerCase().trim();\n      const isQueryInTitle = todo.title.toLowerCase().includes(preparedQuery);\n\n      switch (chosenStatus) {\n        case 'completed':\n          return todo.completed && isQueryInTitle;\n\n        case 'active':\n          return !todo.completed && isQueryInTitle;\n\n        default:\n          return isQueryInTitle;\n      }\n    });\n  }, [todos, query, chosenStatus]);\n\n  const isNoMatchingTodos = query && !filteredTodos.length;\n\n  const selectedTodo = useMemo(() => {\n    return todos.find(todo => todo.id === selectedTodoId);\n  }, [todos, selectedTodoId]);\n\n  const closeModal = useCallback(() => {\n    setSelectedTodoId(0);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                chosenStatus={chosenStatus}\n                setChosenStatus={setChosenStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isTodosLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodoId={selectedTodoId}\n                    onSelect={setSelectedTodoId}\n                  />\n                )}\n\n              {isTodosLoadingError && (\n                <p>Error occured while loading todos</p>\n              )}\n\n              {isNoMatchingTodos && (\n                <p>None of todos is matching your criteria</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onClose={closeModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}