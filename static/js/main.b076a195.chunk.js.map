{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","helpers/helpers.tsx","index.tsx"],"names":["TodoList","React","memo","todos","selectedTodoId","onSelect","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","query","setQuery","chosenStatus","setChosenStatus","value","onChange","event","target","placeholder","style","pointerEvents","get","url","fetch","then","res","json","Loader","TodoModal","selectedTodo","onClose","useState","user","setUser","useEffect","userId","loadedUser","catch","href","email","name","App","setTodos","isTodosLoading","setIsTodosLoading","isTodosLoadingError","setIsTodosLoadingError","setSelectedTodoId","loadedTodos","finally","filteredTodos","useMemo","filter","preparedQuery","toLowerCase","split","Boolean","join","isQueryInTitle","includes","todosFilter","isNoMatchingTodos","length","find","closeModal","useCallback","ReactDOM","render","document","getElementById"],"mappings":"kRAUaA,EAAsBC,IAAMC,MACvC,gBACEC,EADF,EACEA,MAAOC,EADT,EACSA,eAAgBC,EADzB,EACyBA,SADzB,OAGE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,qBAAkB,UAAQ,OAAOF,UAAU,GAA3C,UACE,oBAAIA,UAAU,eAAd,SAA8BE,EAAKC,KACnC,oBAAIH,UAAU,eAAd,SACGE,EAAKE,WACJ,sBAAMJ,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWK,IACZ,CACE,mBAAoBH,EAAKE,UACzB,mBAAoBF,EAAKE,YAH7B,SAOGF,EAAKI,UAGV,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,kBAAMT,EAASG,EAAKC,KAJ/B,SAME,sBAAMH,UAAU,OAAhB,SACE,mBAAGA,UAAWK,IACZ,MACA,CACE,aAAcH,EAAKC,KAAOL,EAC1B,eAAgBI,EAAKC,KAAOL,cAhC/BI,EAAKC,eCrBXM,EAAwBd,IAAMC,MACzC,YAEO,IADLc,EACI,EADJA,MAAOC,EACH,EADGA,SAAUC,EACb,EADaA,aAAcC,EAC3B,EAD2BA,gBAO/B,OACE,uBAAMb,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRc,MAAOF,EACPG,SAAU,SAACC,GAAD,OAAWH,EAAgBG,EAAMC,OAAOH,QAHpD,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGd,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVkB,YAAY,YACZJ,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAWL,EAASK,EAAMC,OAAOH,UAE7C,sBAAMd,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdU,GACC,sBAAMV,UAAU,gBAAgBmB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRb,KAAK,SACLP,UAAU,SACVQ,QAzCQ,WAClBG,EAAS,IACTE,EAAgB,qBCTtB,SAASQ,EAAOC,GAId,OAAOC,MANQ,iEAIYD,EAAM,SAG9BE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,U,MAGd,ICXMC,EAAa,kBACxB,qBAAK3B,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,uBCMN4B,EAAuBjC,IAAMC,MACxC,YAEO,IADLiC,EACI,EADJA,aAAcC,EACV,EADUA,QAEd,EAAwBC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KAQA,OANAC,qBAAU,WFDS,IAACC,KEEVN,EAAaM,OFFgBd,EAAG,iBAAiBc,KEGtDX,MAAK,SAACY,GAAD,OAAgBH,EAAQG,MAC7BC,OAAM,kBAAMJ,EAAQ,WACtB,CAACJ,EAAaM,SAGf,sBAAKnC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEbgC,EAGE,sBAAKhC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIY6B,EAAa1B,MAIzB,wBACEI,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAASsB,OAIb,sBAAK9B,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACG6B,EAAavB,QAGhB,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UACG6B,EAAazB,UACV,wBAAQJ,UAAU,kBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEJ,wCAEA,mBAAGsC,KAAI,wBAAYN,QAAZ,IAAYA,OAAZ,EAAYA,EAAMO,OAAzB,gBACGP,QADH,IACGA,OADH,EACGA,EAAMQ,gBAjCf,cAAC,EAAD,UCXCC,G,MAAU,WACrB,MAA0BV,mBAAiB,IAA3C,mBAAOlC,EAAP,KAAc6C,EAAd,KACA,EAA0BX,mBAAS,IAAnC,mBAAOrB,EAAP,KAAcC,EAAd,KACA,EAAwCoB,mBAAS,OAAjD,mBAAOnB,EAAP,KAAqBC,EAArB,KACA,EAA4CkB,oBAAS,GAArD,mBAAOY,EAAP,KAAuBC,EAAvB,KACA,EAAsDb,oBAAS,GAA/D,mBAAOc,EAAP,KAA4BC,EAA5B,KACA,EAA4Cf,mBAAS,GAArD,mBAAOjC,EAAP,KAAuBiD,EAAvB,KAEAb,qBAAU,WACRU,GAAkB,GHZQvB,EAAY,UGenCG,MAAK,SAACwB,GAAD,OAAiBN,EAASM,MAC/BX,OAAM,kBAAMS,GAAuB,MACnCG,SAAQ,kBAAML,GAAkB,QAClC,IAEH,IAAMM,EAAgBC,mBAAQ,kBChCL,SACzBtD,EACAa,EACAE,GAEA,OAAOf,EAAMuD,QAAO,SAAAlD,GAClB,IAAMmD,EAAgB3C,EACnB4C,cACAC,MAAM,KACNH,OAAOI,SACPC,KAAK,KAEFC,EAAiBxD,EAAKI,MAAMgD,cAAcK,SAASN,GAEzD,OAAQzC,GACN,IAAK,YACH,OAAOV,EAAKE,WAAasD,EAE3B,IAAK,SACH,OAAQxD,EAAKE,WAAasD,EAE5B,QACE,OAAOA,MDUuBE,CAAY/D,EAAOa,EAAOE,KAC5D,CAACf,EAAOa,EAAOE,IAEXiD,EAAoBnD,IAAUwC,EAAcY,OAE5CjC,EAAesB,mBAAQ,WAC3B,OAAOD,EAAca,MAAK,SAAA7D,GAAI,OAAIA,EAAKC,KAAOL,OAC7C,CAACoD,EAAepD,IAEbkE,EAAaC,uBAAY,WAC7BlB,EAAkB,KACjB,IAEH,OACE,qCACE,qBAAK/C,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAACS,EAAD,CACEC,MAAOA,EACPC,SAAUA,EACVC,aAAcA,EACdC,gBAAiBA,MAIrB,sBAAKb,UAAU,QAAf,UACG2C,EACG,cAAC,EAAD,IAEA,cAACjD,EAAD,CACEG,MAAOqD,EACPpD,eAAgBA,EAChBC,SAAUgD,IAIfF,GACC,kEAGDgB,GACC,kFAOThC,GACC,cAACD,EAAD,CACEC,aAAcA,EACdC,QAASkC,SEtFnBE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b076a195.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId: number,\n  onSelect: (selectedTodoId: number) => void,\n};\n\nexport const TodoList: FC<Props> = React.memo(\n  ({\n    todos, selectedTodoId, onSelect,\n  }) => (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr key={todo.id} data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn(\n                {\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect(todo.id)}\n              >\n                <span className=\"icon\">\n                  <i className={cn(\n                    'far',\n                    {\n                      'far fa-eye': todo.id !== selectedTodoId,\n                      'fa-eye-slash': todo.id === selectedTodoId,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  ),\n);\n","import React, { FC } from 'react';\n\ntype Props = {\n  query: string,\n  setQuery: (query: string) => void,\n  chosenStatus: string,\n  setChosenStatus: (chosenStatus: string) => void,\n};\n\nexport const TodoFilter: FC<Props> = React.memo(\n  ({\n    query, setQuery, chosenStatus, setChosenStatus,\n  }) => {\n    const clearFilter = () => {\n      setQuery('');\n      setChosenStatus('all');\n    };\n\n    return (\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              value={chosenStatus}\n              onChange={(event) => setChosenStatus(event.target.value)}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            value={query}\n            onChange={(event) => setQuery(event.target.value)}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          {query && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={clearFilter}\n              />\n            </span>\n          )}\n        </p>\n      </form>\n    );\n  },\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return fetch(fullURL)\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { FC } from 'react';\nimport './Loader.scss';\n\nexport const Loader: FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { FC, useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  onClose: () => void,\n};\n\nexport const TodoModal: FC<Props> = React.memo(\n  ({\n    selectedTodo, onClose,\n  }) => {\n    const [user, setUser] = useState<User | null>(null);\n\n    useEffect(() => {\n      getUser(selectedTodo.userId)\n        .then((loadedUser) => setUser(loadedUser))\n        .catch(() => setUser(null));\n    }, [selectedTodo.userId]);\n\n    return (\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n\n        {!user\n          ? <Loader />\n          : (\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${selectedTodo.id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={onClose}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {selectedTodo.title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {selectedTodo.completed\n                    ? <strong className=\"has-text-danger\">Done</strong>\n                    : <strong className=\"has-text-danger\">Planned</strong>}\n\n                  <span> by </span>\n\n                  <a href={`mailto:${user?.email}`}>\n                    {user?.name}\n                  </a>\n                </p>\n              </div>\n            </div>\n          )}\n      </div>\n    );\n  },\n);\n","/* eslint-disable max-len */\nimport {\n  FC, useEffect, useState, useMemo, useCallback,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { todosFilter } from './helpers/helpers';\nimport './App.scss';\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [chosenStatus, setChosenStatus] = useState('all');\n  const [isTodosLoading, setIsTodosLoading] = useState(false);\n  const [isTodosLoadingError, setIsTodosLoadingError] = useState(false);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n\n  useEffect(() => {\n    setIsTodosLoading(true);\n\n    getTodos()\n      .then((loadedTodos) => setTodos(loadedTodos))\n      .catch(() => setIsTodosLoadingError(true))\n      .finally(() => setIsTodosLoading(false));\n  }, []);\n\n  const filteredTodos = useMemo(() => todosFilter(todos, query, chosenStatus),\n    [todos, query, chosenStatus]);\n\n  const isNoMatchingTodos = query && !filteredTodos.length;\n\n  const selectedTodo = useMemo(() => {\n    return filteredTodos.find(todo => todo.id === selectedTodoId);\n  }, [filteredTodos, selectedTodoId]);\n\n  const closeModal = useCallback(() => {\n    setSelectedTodoId(0);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                chosenStatus={chosenStatus}\n                setChosenStatus={setChosenStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isTodosLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodoId={selectedTodoId}\n                    onSelect={setSelectedTodoId}\n                  />\n                )}\n\n              {isTodosLoadingError && (\n                <p>Error occured while loading todos</p>\n              )}\n\n              {isNoMatchingTodos && (\n                <p>None of todos is matching your criteria</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onClose={closeModal}\n        />\n      )}\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nexport const todosFilter = (\n  todos: Todo[],\n  query: string,\n  chosenStatus: string,\n): Todo[] => {\n  return todos.filter(todo => {\n    const preparedQuery = query\n      .toLowerCase()\n      .split(' ')\n      .filter(Boolean)\n      .join(' ');\n\n    const isQueryInTitle = todo.title.toLowerCase().includes(preparedQuery);\n\n    switch (chosenStatus) {\n      case 'completed':\n        return todo.completed && isQueryInTitle;\n\n      case 'active':\n        return !todo.completed && isQueryInTitle;\n\n      default:\n        return isQueryInTitle;\n    }\n  });\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}